//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
using System.Linq;

namespace Spres.Models
{

    public class Budget
    {
        public Budget()
        {
            Sheets = new HashSet<BudgetSheet>();
            Authorizations = new HashSet<BudgetAuthorization>();
        }
        public int Id { get; set; }

        public int CostCenterId { get; set; }
        public virtual CostCenter CostCenter { get; set; }


        public int CompanyId { get; set; }
        public virtual Company Company { get; set; }
        
        
        public int FiscalYear { get; set; }
        public virtual Programming BudgetProgramming { get; set; }

        public virtual ICollection<BudgetSheet> Sheets { get; set; }

        public virtual ICollection<BudgetAuthorization> Authorizations { get; set; }

        public bool IsProtected
        {
            get
            {
                if (Authorizations.Any())
                {
                    return Authorizations.Any(a => a.Status == AuthorizationStatus.Authorized); 
                }
                else
                {
                    return false;
                }
            }
        }

        public bool IsTracked
        {
            get
            {
                return Authorizations.Any();
            }
        }

        public BudgetStatus Status
        {
            get
            {
                if (!Authorizations.Any())
                {
                    return BudgetStatus.Created;
                }
                else if (Authorizations.All(a => a.Status == AuthorizationStatus.Authorized))
                {
                    return BudgetStatus.Authorized;
                }
                else if (Authorizations.Any(a => a.Status == AuthorizationStatus.Pending))
                {
                    return BudgetStatus.Created;
                }
                else if (Authorizations.Any(a => a.Status == AuthorizationStatus.Enabled))
                {
                    return BudgetStatus.Review;
                }
                else if (!Authorizations.Any(a => a.Status == AuthorizationStatus.Pending))
                {
                    return BudgetStatus.Review;
                }
                else if (Authorizations.All(a => a.Status == AuthorizationStatus.Authorized || a.Status == AuthorizationStatus.Enabled))
                {
                    return BudgetStatus.Authorized;
                }
                else
                {
                    return BudgetStatus.None;
                }
            }
        }
    }
}

