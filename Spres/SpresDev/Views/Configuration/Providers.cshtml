
@{
    ViewBag.Title = "ServiceProviders";
    Layout = "~/Views/Shared/_Popup.cshtml";
}

<div id="gridProviders"></div>

<script type="text/javascript">
    $(function () {

        var providers = getUrl("/api/Providers");
        var dataManager = ej.DataManager({
            url: providers,
            adaptor: new ej.WebApiAdaptor()
        });

        var urlDtProviderTypes = getUrl("/api/ProviderTypes");
        var dataManagerType = ej.DataManager({
            url: urlDtProviderTypes,
            adaptor: new ej.WebApiAdaptor()
        });

        var dataType = [];
        dataManagerType.executeQuery(ej.Query()).done(function (e) {
            for (var i = 0; i < e.result.length; i++) {
                dataType.push({
                    Target: e.result[i].Id,
                    TargetName: e.result[i].Name
                });
            }
        });
        

        var columnsProvidersPopUp = [
                { field: "Id", isPrimaryKey: true, visible: false },
                { field: "Name", headerText: 'Nombre del proveedor', validationRules: { required: true, minlength: 3 } },
                {
                    field: "ProviderTypeId", headerText: 'Tipo de proveedor', editType: ej.Grid.EditingType.Dropdown, dataSource: dataType,
                    foreignKeyValue: "TargetName", foreignKeyField: "Target", validationRules: { required: true }
                },
                
        ];
        
        var editProvidersButtons = {
            headerText: "",
            commands: [
                { type: ej.Grid.UnboundType.Edit, buttonOptions: { contentType: "imageonly", prefixIcon: "e-edit" } },
                { type: ej.Grid.UnboundType.Delete, buttonOptions: { contentType: "imageonly", prefixIcon: "e-delete" } },
                { type: ej.Grid.UnboundType.Save, buttonOptions: { contentType: "imageonly", prefixIcon: "e-save" } },
                { type: ej.Grid.UnboundType.Cancel, buttonOptions: { contentType: "imageonly", prefixIcon: "e-cancel" } ,showDeleteConfirmDialog: true}
            ],
            isUnbound: true,
            width: 150
        };




        var permissions = JSON.parse(sessionStorage.permissions);
        var providersToolItems = [ej.Grid.ToolBarItems.Search];
        for (var pr = 0; pr < permissions.length; pr++) {

            var permission = permissions[pr];
            if (permission.Option == "Catalogs") {
                if (permission.Edit) {
                    columnsProvidersPopUp.push(editProvidersButtons);
                    providersToolItems = [ej.Grid.ToolBarItems.Add, ej.Grid.ToolBarItems.Search];
                }
            }

        }

        $("#gridProviders").ejGrid({
            dataSource: dataManager,
            columns: columnsProvidersPopUp,
            allowPaging: true,
            allowScrolling: true,
            pageSettings: {pageSize: 6 },
            editSettings: { allowEditOnDblClick: false, allowEditing: true, allowAdding: true, allowDeleting: true},
            toolbarSettings: { showToolbar: true, toolbarItems: providersToolItems },
            endAdd: function () {
                this.refreshContent();
            },
            actionBegin: function (args) {
             if (args.requestType == "delete") {
                if(!confirm("¿Desea eliminar el proveedor seleccionado?")){
                    args.cancel = true;
                }
            };
        },
        });
    });
</script>

